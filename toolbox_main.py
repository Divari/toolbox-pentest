from menu import menu_titre, menu_principal, menu_second_Scan, menu_second_Exploit, menu_second_Password, menu_second_Authentication, menu_second_exploitvuln, menu_second_postexploit
from colorama import init
from datetime import datetime

from imports.Scan_Network.module1_Scan import execute_port_scan, perform_custom_port_scan, network_scan
from imports.Scan_Vulnerable.module2_Vulnerable import analyze_system, searchforexploit, evaluate_ports
from imports.Test_Password.module3_Password import evaluate_password_difficulty, evaluate_csv_difficulty, add_line_csv_password
from imports.Authentification.Module4_Authentification import connect_host, bruteforce
from imports.Exploit_Vulnerable.Module5_Exploit import get_fqdn, ssh_scan_installed_applications
from imports.Post_Exploitation.Module6_PostExploit import ssh_get_arp_and_routing_table
from imports.Rapports.Mdoule7_PDF import générer_rapport_sécurité

if __name__ == "__main__":

    init()
    menu_titre()
    menu_principal()
    
    user_choice = int(input(">>> Choisissez une option\n>>> "))

    while user_choice != 99:

        if user_choice == 1:
            menu_second_Scan()
            sub_choice = str(input(">>> Choisissez une option\n>>> "))
            while sub_choice != 'z':

                if sub_choice == 'a':
                    target = str(input(">>> Renseignez l'IP ou le domaine ciblé\n>>> "))
                    scan_result, version = execute_port_scan(target)
                    print(scan_result)

                if sub_choice == 'b':
                    target = str(input(">>> Renseignez l'IP ou le domaine ciblé\n>>> "))
                    first_port = str(input(">>> Premier port\n>>> "))
                    last_port = str(input(">>> Dernier port\n>>> "))
                    scan_result, version = perform_custom_port_scan(target, first_port, last_port)
                    print(scan_result)

                if sub_choice == 'c':
                    target_ip = input("Entrez l'adresse IP du réseau à scanner, ex: 198.243.10.0/24) : ")
                    network_scan(target_ip)

                menu_second_Scan()
                sub_choice = str(input(">>> Choisissez une option\n>>> "))

        elif user_choice == 2:
            menu_second_Exploit()
            sub_choice = str(input(">>> Choisissez une option\n>>> "))
            while sub_choice != 'z':
                
                if sub_choice == 'a':
                    ip_os = str(input(">>> Renseignez l'IP ou la plage à scanner ex 192.168.1.1 ou 192.168.1.1-50)\n>>> "))
                    os_vuln_result = analyze_system(ip_os)
                    print(os_vuln_result)
                
                if sub_choice == 'b':
                    service = str(input(">>> Rechercher un exploit sur un service\n>>> "))
                    exploit = searchforexploit(service)
                    print(exploit)

                if sub_choice == 'c':
                    ip_proto = str(input(">>> Renseignez l'IP de la machine à scanner\n>>> "))
                    nb_ports_proto = str(input(">>> Renseignez les ports à scanner ex:1-80\n>>> "))
                    result_vuln_proto = evaluate_ports(ip_proto, nb_ports_proto)
                    print(result_vuln_proto)


                
                menu_second_Exploit()
                sub_choice = str(input(">>> Choisissez une option\n>>> "))
        
        elif user_choice == 3:
            menu_second_Password()
            sub_choice = str(input(">>> Choisissez une option\n>>> "))
            while sub_choice != 'z':

                if sub_choice == 'a':
                    password = input("Renseignez le mot de passe à tester: ")
                    difficulty = evaluate_password_difficulty(password)
                    print("Robustesse du mot de passe:", difficulty)

                if sub_choice == 'b':
                    csv_file_path = "passwords"
                    results = evaluate_csv_difficulty(csv_file_path)
                    for login, password, difficulty, in results:
                        print(f"Login: {login}, Mot de Passe: {password}, Difficulté: {difficulty}")

                if sub_choice == 'c':
                    new_password = input("Renseignez le nouveau mot de passe : ")
                    new_line_password = [new_password]
                    csv_file_name = 'imports\Test_Password\passwords.csv'
                    add_line_csv_password(csv_file_name, new_line_password)
                    
                menu_second_Password()
                sub_choice = str(input(">>> Choisissez une option\n>>> "))

        elif user_choice == 4:
            menu_second_Authentication()
            sub_choice = str(input(">>> Choisissez une option\n>>> "))
            while sub_choice != 'z':

                if sub_choice == 'a':
                    host_ssh = input("Renseignez l'IP de la machine à laquelle vous voulez vous connecter: ")
                    login_ssh = input("Renseignez le login: ")
                    password_ssh = input("Renseignez le mot de passe: ")
                    connect_host(host_ssh, login_ssh, password_ssh)

                if sub_choice == 'b':
                    host = input("Renseignez l'IP de la machine : ")
                    username_file = "/imports/Module4_Authentification/logins.txt"
                    password_file = "/imports/Module4_Authentification/passwords.txt"
                    ssh_client = bruteforce(host, username_file, password_file)
                    
                menu_second_Authentication()
                sub_choice = str(input(">>> Choisissez une option\n>>> "))

        elif user_choice == 5:
            menu_second_exploitvuln()
            sub_choice = str(input(">>> Choisissez une option\n>>> "))
            while sub_choice != 'z':

                if sub_choice == 'a':
                    host_fqdn = input("Renseignez l'IP de la machine dont vous voulez récupérer le FQDN :")
                    username_fqdn = input("Renseignez un login pour accéder à la machine :")
                    password_fqdn = input("Renseignez un mot de passe pour accéder à la machine :")
                    ssh_client = get_fqdn(host_fqdn, username_fqdn, password_fqdn)                               

                if sub_choice == 'b':
                    host_applications = input("Renseignez l'IP de la machine dont vous voulez connaître les applications :")
                    username_applications = input("Renseignez un login pour accéder à la machine :")
                    password_applications = input("Renseignez un mot de passe pour accéder à la machine :")
                    ssh_scan_installed_applications(host_applications, username_applications, password_applications)
                    
                menu_second_exploitvuln()
                sub_choice = str(input(">>> Choisissez une option\n>>> "))


        elif user_choice == 6:
                menu_second_postexploit()
                sub_choice = str(input(">>> Choose an option\n>>> "))
                while sub_choice != 'z':

                    if sub_choice == 'a':
                        host = input("Renseignez l'IP de la machine dont vous voulez le cache ARP et la table de routage :")
                        username = input("Renseignez un login pour accéder à la machine :")
                        password = input("Renseignez un mot de passe pour accéder à la machine :")
                        ssh_get_arp_and_routing_table(host, username, password)                          

                        
                    menu_second_postexploit()
                    sub_choice = str(input(">>> Choose an option\n>>> "))
        
        elif user_choice == 7:
            
            ip_address_report = input("Entrez l'adresse IP du réseau à scanner: ")
            générer_rapport_sécurité(ip_address_report)

            menu_principal()
            user_choice = int(input(">>> Choisissez une option\n>>> "))
             
        menu_principal()
        user_choice = int(input(">>> Choisissez une option\n>>> "))



 
    

    


    